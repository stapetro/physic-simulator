/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AnimationPanel.java
 *
 * Created on 2009-5-16, 23:20:19
 */
package physics;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.image.ImageObserver;
import java.text.AttributedCharacterIterator;
import javax.swing.border.LineBorder;

/**
 *
 * @author Krasimir Baylov, Stanislav Petrov
 */
public class AnimationPanel extends javax.swing.JPanel {

    private Target target;
    private boolean targetPainted;
//    private Graphics g;
    Graphics myGraphics;

    /** Creates new form AnimationPanel */
    public AnimationPanel() {
        initComponents();
        target = new Target();
        targetPainted = false;
        LineBorder lb = new LineBorder(Color.BLACK, 1);
        setOpaque(true);
        setBorder(lb);
        repaint();
    }

    /**
     * Set the angle in the gun panel.
     * @param angleValue
     */
    public void setAngle(double angleValue) {
        gunPnl.setAngle(angleValue);
    }

    @Override
    public void paintComponent(Graphics g) {
        //TODO When resize panel to repaint target with same coordinates.
        /**
         * Generate new coordinates when start button is pressed in settings
         * panel.
         */
        if (!targetPainted) {
            super.paintComponent(g);
            myGraphics = g;
            target.drawRandomCoordinates(myGraphics, getWidth(), getHeight());
            targetPainted = true;
        }
    }

    public void drawTarget() {
        System.out.println("test");
//        repaint();
//        super.paintComponent(g1);
        target.drawRandomCoordinates(myGraphics, getWidth(), getHeight());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gunPnl = new physics.GunPanel();

        setPreferredSize(new java.awt.Dimension(550, 500));

        javax.swing.GroupLayout gunPnlLayout = new javax.swing.GroupLayout(gunPnl);
        gunPnl.setLayout(gunPnlLayout);
        gunPnlLayout.setHorizontalGroup(
            gunPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );
        gunPnlLayout.setVerticalGroup(
            gunPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 198, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(gunPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(217, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(gunPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private physics.GunPanel gunPnl;
    // End of variables declaration//GEN-END:variables

    /**
     * @param targetPainted the targetPainted to set
     */
    public void setTargetPainted(boolean targetPainted) {
        this.targetPainted = targetPainted;
    }
}

